<!DOCTYPE html>
<html>
<head>
    <title><%= title %></title>
    <link rel='stylesheet' href='/stylesheets/style.css'/>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>
</head>
<body>

<input type="button" value="main data" onclick="sendStatusData()">
<input type="button" value="pcsInnerSensor data" onclick="sendPcsInnerSensorData()">
<input type="button" value="batteryInnerSensor data" onclick="sendBatteryInnerSensorData()">
</body>
<script>
    //var ws = new WebSocket('ws://localhost:3100');
    //var ws = new WebSocket('ws://101.101.216.193:3100');
    //var ws = new WebSocket('ws://14.39.99.148:7003'); // Server
    var ws = new WebSocket('ws://172.30.1.44:3100'); // Server


    ws.onopen = (event) => {
        console.log("---------------------------------------------");
        let sendData = {id: 'M/W001', eventType: 'req', deviceType: 'middleware', dataType: 'connect'};
        ws.send(JSON.stringify(sendData));
        console.log("---------------------------------------------\n\n");
    }

    ws.onmessage = (event) => {
        console.log("---------------------------------------------");
        console.log("M/W001 : Data Received From Server");

        let receivedData = JSON.parse(event.data);

        switch (receivedData.eventType) {

            case 'req' :

                switch (receivedData.dataType) {

                    case 'status':
                        console.log('              status                ');
                        console.log(event.data);
                        console.log('M/W001 id : ' + receivedData.id);
                        console.log('M/W001 eventType : ' + receivedData.eventType);
                        console.log('M/W001 dataType : ' + receivedData.dataType);
                        console.log('M/W001 result : ' + receivedData.result);
                        console.log('M/W001 message : ' + receivedData.message);
                        break;

                    case 'control':
                        console.log('              control                ');
                        console.log(event.data);
                        console.log('M/W001 id : ' + receivedData.id);
                        console.log('M/W001 eventType : ' + receivedData.eventType);
                        console.log('M/W001 deviceType : ' + receivedData.deviceType);
                        console.log('M/W001 dataType : ' + receivedData.dataType);
                        console.log('M/W001 data : ' + receivedData.data);
                        console.log('M/W001 targetId : ' + receivedData.data.targetId);
                        console.log('M/W001 controlType : ' + receivedData.data.controlType);
                        console.log('M/W001 controlValue : ' + receivedData.data.controlValue);

                        let sendData = {
                            id: receivedData.id,
                            eventType: 'res',
                            dataType: receivedData.dataType,
                            result: 'success',
                            message: ''
                        };

                        console.log("---------------------------------------------");
                        console.log("sendData : " + JSON.stringify(sendData));
                        console.log("---------------------------------------------\n\n");

                        ws.send(JSON.stringify(sendData));

                        sendStatusData(receivedData.data.controlType, receivedData.data.controlValue);

                        break;
                    default:
                }

                break;

            case 'res' :

                switch (receivedData.dataType) {
                    case 'connect':
                        console.log('              connect                ');
                        console.log(event.data);
                        console.log('M/W001 id : ' + receivedData.id);
                        console.log('M/W001 eventType : ' + receivedData.eventType);
                        console.log('M/W001 dataType : ' + receivedData.dataType);
                        console.log('M/W001 result : ' + receivedData.result);
                        console.log('M/W001 message : ' + receivedData.message);
                        break;

                    case 'status':
                        console.log('              status                ');
                        console.log(event.data);
                        console.log('M/W001 id : ' + receivedData.id);
                        console.log('M/W001 eventType : ' + receivedData.eventType);
                        console.log('M/W001 dataType : ' + receivedData.dataType);
                        console.log('M/W001 result : ' + receivedData.result);
                        console.log('M/W001 message : ' + receivedData.message);
                        break;

                    case 'control':
                        console.log('              control                ');
                        console.log(event.data);
                        console.log('M/W001 id : ' + receivedData.id);
                        console.log('M/W001 eventType : ' + receivedData.eventType);
                        console.log('M/W001 deviceType : ' + receivedData.deviceType);
                        console.log('M/W001 dataType : ' + receivedData.dataType);
                        console.log('M/W001 data : ' + receivedData.data);
                        console.log('M/W001 targetId : ' + receivedData.data.targetId);
                        console.log('M/W001 controlType : ' + receivedData.data.controlType);
                        console.log('M/W001 controlValue : ' + receivedData.data.controlValue);

                        let sendData = {
                            id: receivedData.id,
                            eventType: 'res',
                            dataType: receivedData.dataType,
                            result: 'success',
                            message: ''
                        };

                        console.log("---------------------------------------------");
                        console.log("sendData : " + JSON.stringify(sendData));
                        console.log("---------------------------------------------\n\n");

                        ws.send(JSON.stringify(sendData));

                        break;
                    default:
                }

                break;

        }



        console.log("---------------------------------------------\n\n");
    }

    function sendStatusData(controlType, controlValue) {
        setTimeout(function(){

            sendPcsData(0, controlType, controlValue);
        }, 1000);

        setTimeout(function(){

            sendPcsData(1 , controlType, controlValue);
        }, 2000);

        setTimeout(function(){

            sendPcsData(0 , controlType, controlValue);
        }, 3000);

        setTimeout(function(){

            sendPcsData(1 , controlType, controlValue);
        }, 4000);

        setTimeout(function(){

            sendPcsData(0 , controlType, controlValue);
        }, 5000);

        setTimeout(function(){

            sendPcsData(1 , controlType, controlValue);
        }, 6000);

        setTimeout(function(){

            sendPcsData(0 , controlType, controlValue);
        }, 7000);
        setTimeout(function(){

            sendPcsData(1 , controlType, controlValue);
        }, 8000);

        setTimeout(function(){

            sendPcsData(0 , controlType, controlValue);
        }, 9000);
        setTimeout(function(){

            sendPcsData(1 , controlType, controlValue);
        }, 10000);


        //Battery
        setTimeout(function(){

            sendBatteryData(0 , controlType, controlValue);
        }, 1000);

        setTimeout(function(){

            sendBatteryData(1 , controlType, controlValue);
        }, 2000);

        setTimeout(function(){

            sendBatteryData(2 , controlType, controlValue);
        }, 3000);

        setTimeout(function(){

            sendBatteryData(3 , controlType, controlValue);
        }, 4000);

        setTimeout(function(){

            sendBatteryData(4 , controlType, controlValue);
        }, 5000);

        setTimeout(function(){

            sendBatteryData(3 , controlType, controlValue);
        }, 6000);

        setTimeout(function(){

            sendBatteryData(2 , controlType, controlValue);
        }, 7000);

        setTimeout(function(){

            sendBatteryData(1 , controlType, controlValue);
        }, 8000);

        setTimeout(function(){

            sendBatteryData(0 , controlType, controlValue);
        }, 9000);

        setTimeout(function(){

            sendBatteryData(4 , controlType, controlValue);
        }, 10000);
    }

    function sendPcsData(index, controlType, controlValue) {

        var disChargePower;
        var rSVolt;
        var upRCurr;
        var dcLinkVolt;
        var frequencyHz;
        var sTVolt;
        var upSCurr;
        var dcBatteryVolt;
        var tRVolt;
        var upTCurr;
        var dcBatteryCurr;
        var faultExistYn;
        var faultList;

        if (index == 0) {
            disChargePower = '101.5';
            rSVolt = '41.2';
            upRCurr = '11.2';
            dcLinkVolt = '41.5';
            frequencyHz = '23.3';
            sTVolt = '38.8';
            upSCurr = '11.4';
            dcBatteryVolt = '221.2';
            tRVolt = '42.2';
            upTCurr = '11.3';
            dcBatteryCurr = '11.5';
            faultExistYn = 'N';
            faultList = [{"errorCode": "10", "errorName":"Power stack short circuit Trip"},{"errorCode": "20","errorName":"Controller A/D Converter Line Offset Trip (Current part)"},{"errorCode": "30","errorName":"Controller Fault"},{"errorCode": "20","errorName":"Controller Fault"},{"errorCode": "20","errorName":"Controller Fault"},{"errorCode": "20","errorName":"Controller Fault"},{"errorCode": "20","errorName":"Controller Fault"},{"errorCode": "20","errorName":"Controller Fault"},{"errorCode": "20","errorName":"Controller Fault11"},{"errorCode": "20","errorName":"Controller Fault121313"}];
        } else {
            disChargePower = '100.5';
            rSVolt = '40.2';
            upRCurr = '10.2';
            dcLinkVolt = '40.5';
            frequencyHz = '22.3';
            sTVolt = '39.8';
            upSCurr = '10.4';
            dcBatteryVolt = '220.2';
            tRVolt = '41.2';
            upTCurr = '10.3';
            dcBatteryCurr = '10.5';
            faultExistYn = 'N';
            faultList = [{"errorCode": "20","errorName":"Power stack short circuit Trip"},{"errorCode": "20","errorName":"Controller A/D Converter Line Offset Trip (Current part)"},{"errorCode": "20","errorName":"Controller Fault"},{"errorCode": "20","errorName":"Controller Fault"},{"errorCode": "20","errorName":"Controller Fault"},{"errorCode": "20","errorName":"Controller Fault"},{"errorCode": "20","errorName":"Controller Fault"},{"errorCode": "20","errorName":"Controller Fault"},{"errorCode": "20","errorName":"Controller Fault11"},{"errorCode": "20","errorName":"Controller Fault121313"},{"errorCode": "20","errorName":"Controller Fault"}];
        }

        let sendData = {
            id: 'M/W001',
            eventType: 'req',
            deviceType: 'pcs',
            dataType: 'status',
            data: {
                operationStatus : controlType == undefined ? 'discharging' : controlType,
                faultExistYn : faultExistYn,
                disChargePower : controlValue == undefined ? disChargePower : controlValue,
                rSVolt : rSVolt,
                upRCurr : upRCurr,
                dcLinkVolt : dcLinkVolt,
                frequencyHz : frequencyHz,
                sTVolt : sTVolt,
                upSCurr : upSCurr,
                dcBatteryVolt : dcBatteryVolt,
                tRVolt : tRVolt,
                upTCurr : upTCurr,
                dcBatteryCurr : dcBatteryCurr,
                faultList : faultList
            }
        };

        console.log("---------------------------------------------");
        console.log("sendData : " + JSON.stringify(sendData));
        console.log("---------------------------------------------\n\n");

        ws.send(JSON.stringify(sendData));
    }

    function sendBatteryData(index, controlType, controlValue) {

        var soc0;
        var rackVolt0;
        var rackCurrent0;
        var faultList0;
        var faultExistYn0;
        var rackNo0;

        if (index == 0) {
            rackNo0 = '1';
            faultExistYn0 = 'Y';
            soc0 = '22.2';
            rackVolt0 = '23.1';
            rackCurrent0 = '11.1';
            faultList0 = [{"errorCode":"batteryError", "errorName":"batteryRack1Error"},{"errorCode":"batteryError", "errorName":"batteryRack1Error01"},{"errorCode":"batteryError", "errorName":"batteryRack1Error2222222"}];

        } else if (index == 1) {
            rackNo0 = '3';
            faultExistYn0 = 'Y';
            soc0 = '48.9';
            rackVolt0 = '23.1';
            rackCurrent0 = '11.1';
            faultList0 = [{"errorCode":"batteryError", "errorName":"batteryRack3"},{"errorCode":"batteryError", "errorName":"batteryRack3"}];

        } else if (index == 2) {
            rackNo0 = '2';
            faultExistYn0 = 'Y';
            soc0 = '50.1';
            rackVolt0 = '23.1';
            rackCurrent0 = '11.1';
            faultList0 = [{"errorCode":"batteryError", "errorName":"batteryRack1Error1212"},{"errorCode":"batteryError", "errorName":"batteryRack1Error01"}];

        } else if (index == 3) {
            rackNo0 = '1';
            faultExistYn0 = 'N';
            soc0 = '76.9';
            rackVolt0 = '23.1';
            rackCurrent0 = '11.1';
            faultList0 = [];

        } else {
            rackNo0 = '1';
            faultExistYn0 = 'N';
            soc0 = '96.9';
            rackVolt0 = '22.3';
            rackCurrent0 = '11.3';
            faultList0 = [];
        }

        let rackData = {
                rackNo: rackNo0,
                faultExistYn: faultExistYn0,
                chargingStatus: controlType  == undefined ? 'charging' : controlType,
                soc: soc0,
                rackVolt: rackVolt0,
                rackCurrent: rackCurrent0,
                faultList: faultList0
        }


        let batteryData = {
            id: 'M/W001',
            eventType: 'req',
            deviceType: 'battery',
            dataType: 'status',
            data: rackData
        };

        console.log("---------------------------------------------");
        console.log("batteryData : " + JSON.stringify(batteryData));
        console.log("---------------------------------------------\n\n");

        ws.send(JSON.stringify(batteryData));
    }

    function sendPcsInnerSensorData() {

        setTimeout(function(){

            pcsInnerSensorData(0);
        }, 1000);

        setTimeout(function(){

            pcsInnerSensorData(1);
        }, 2000);

        setTimeout(function(){

            pcsInnerSensorData(2);
        }, 3000);

        setTimeout(function(){

            pcsInnerSensorData(3);
        }, 4000);

        setTimeout(function(){

            pcsInnerSensorData(4);
        }, 5000);

        setTimeout(function(){

            pcsInnerSensorData(5);
        }, 6000);

        setTimeout(function(){

            pcsInnerSensorData(6);
        }, 7000);
        setTimeout(function(){

            pcsInnerSensorData(7);
        }, 8000);

        setTimeout(function(){

            pcsInnerSensorData(8);
        }, 9000);
        setTimeout(function(){

            pcsInnerSensorData(9);
        }, 10000);
        setTimeout(function(){

            batteryInnerSensorData(10);
        }, 11000);
    }
    
    function sendBatteryInnerSensorData() {
        setTimeout(function(){

            batteryInnerSensorData(0);
        }, 1000);

        setTimeout(function(){

            batteryInnerSensorData(1);
        }, 2000);

        setTimeout(function(){

            batteryInnerSensorData(2);
        }, 3000);

        setTimeout(function(){

            batteryInnerSensorData(3);
        }, 4000);

        setTimeout(function(){

            batteryInnerSensorData(4);
        }, 5000);

        setTimeout(function(){

            batteryInnerSensorData(5);
        }, 6000);

        setTimeout(function(){

            batteryInnerSensorData(6);
        }, 7000);
        setTimeout(function(){

            batteryInnerSensorData(7);
        }, 8000);

        setTimeout(function(){

            batteryInnerSensorData(8);
        }, 9000);
        setTimeout(function(){

            batteryInnerSensorData(9);
        }, 10000);
        setTimeout(function(){

            batteryInnerSensorData(10);
        }, 11000);

    }

    function pcsInnerSensorData(index) {
        var pmsCode;
        var essCode;
        var deviceCode;
        var deviceName;
        var faultExistYn;
        var measures;

        if (index == 0) {
            pmsCode = 'P001';
            essCode = 'E001';
            deviceCode = '0401';
            deviceName = '온도 센서 [PCS]';
            faultExistYn = 'N';
            measures = '29.8';
        } else if (index == 1) {
            pmsCode = 'P001';
            essCode = 'E001';
            deviceCode = '0601';
            deviceName = '습도 센서 [PCS]';
            faultExistYn = 'N';
            measures = '7.8';
        } else if (index == 2) {
            pmsCode = 'P001';
            essCode = 'E001';
            deviceCode = '0801';
            deviceName = '조도 센서 [PCS]';
            faultExistYn = 'N';
            measures = '9.8';
        } else if (index == 3) {
            pmsCode = 'P001';
            essCode = 'E001';
            deviceCode = '1001';
            deviceName = '도어 센서 [PCS]';
            faultExistYn = 'N';
            measures = '1';
        } else if (index == 4) {
            pmsCode = 'P001';
            essCode = 'E001';
            deviceCode = '1001';
            deviceName = '도어 센서 [PCS]';
            faultExistYn = 'Y';
            measures = '1';
        } else if (index == 5) {
            pmsCode = 'P001';
            essCode = 'E001';
            deviceCode = '1001';
            deviceName = '도어 센서 [PCS]';
            faultExistYn = 'N';
            measures = '0';
        } else if (index == 6) {
            pmsCode = 'P001';
            essCode = 'E001';
            deviceCode = '1001';
            deviceName = '도어 센서 [PCS]';
            faultExistYn = 'Y';
            measures = '1';
        } else if (index == 7) {
            pmsCode = 'P001';
            essCode = 'E001';
            deviceCode = '0801';
            deviceName = '조도 센서 [PCS]';
            faultExistYn = 'N';
            measures = '10.7';
        } else if (index == 8) {
            pmsCode = 'P001';
            essCode = 'E001';
            deviceCode = '1001';
            deviceName = '도어 센서 [PCS]';
            faultExistYn = 'N';
            measures = '1';
        } else if (index == 9) {
            pmsCode = 'P001';
            essCode = 'E001';
            deviceCode = '0401';
            deviceName = '온도 센서 [PCS]';
            faultExistYn = 'Y';
            measures = '-';
        } else if (index == 10) {
            pmsCode = 'P001';
            essCode = 'E001';
            deviceCode = '0801';
            deviceName = '조도 센서 [PCS]';
            faultExistYn = 'Y';
            measures = '1';
        }

        let sendData = {
            id: 'M/W001',
            eventType: 'req',
            deviceType: 'pcsInnerSensor',
            dataType: 'status',
            data: {
                pmsCode : pmsCode,
                essCode : essCode,
                deviceCode : deviceCode,
                deviceName : deviceName,
                faultExistYn : faultExistYn,
                measures : measures
            }
        };

        console.log("---------------------------------------------");
        console.log("sendPcsInnerSensorData : " + JSON.stringify(sendData));
        console.log("---------------------------------------------\n\n");

        ws.send(JSON.stringify(sendData));
    }

    function batteryInnerSensorData(index) {
        var pmsCode;
        var essCode;
        var deviceCode;
        var deviceName;
        var faultExistYn;
        var measures;

        if (index == 0) {
            pmsCode = 'P001';
            essCode = 'E001';
            deviceCode = '0501';
            deviceName = '온도 센서 [배터리]';
            faultExistYn = 'N';
            measures = '29.8';
        } else if (index == 1) {
            pmsCode = 'P001';
            essCode = 'E001';
            deviceCode = '0701';
            deviceName = '습도 센서 [배터리]';
            faultExistYn = 'N';
            measures = '29.8';
        } else if (index == 2) {
            pmsCode = 'P001';
            essCode = 'E001';
            deviceCode = '0901';
            deviceName = '조도 센서 [배터리]';
            faultExistYn = 'N';
            measures = '29.8';
        } else if (index == 3) {
            pmsCode = 'P001';
            essCode = 'E001';
            deviceCode = '1101';
            deviceName = '도어 센서 [배터리]';
            faultExistYn = 'N';
            measures = '1';
        } else if (index == 4) {
            pmsCode = 'P001';
            essCode = 'E001';
            deviceCode = '1101';
            deviceName = '도어 센서 [배터리]';
            faultExistYn = 'Y';
            measures = '1';
        } else if (index == 5) {
            pmsCode = 'P001';
            essCode = 'E001';
            deviceCode = '1101';
            deviceName = '도어 센서 [배터리]';
            faultExistYn = 'N';
            measures = '0';
        } else if (index == 6) {
            pmsCode = 'P001';
            essCode = 'E001';
            deviceCode = '1101';
            deviceName = '도어 센서 [배터리]';
            faultExistYn = 'N';
            measures = '1';
        } else if (index == 7) {
            pmsCode = 'P001';
            essCode = 'E001';
            deviceCode = '0901';
            deviceName = '조도 센서 [배터리]';
            faultExistYn = 'N';
            measures = '10';
        } else if (index == 8) {
            pmsCode = 'P001';
            essCode = 'E001';
            deviceCode = '1101';
            deviceName = '도어 센서 [배터리]';
            faultExistYn = 'N';
            measures = '1';
        } else if (index == 9) {
            pmsCode = 'P001';
            essCode = 'E001';
            deviceCode = '0501';
            deviceName = '온도 센서 [배터리]';
            faultExistYn = 'Y';
            measures = '-';
        } else if (index == 10) {
            pmsCode = 'P001';
            essCode = 'E001';
            deviceCode = '0901';
            deviceName = '조도 센서 [배터리]';
            faultExistYn = 'Y';
            measures = '1';
        }
        let sendData = {
            id: 'M/W001',
            eventType: 'req',
            deviceType: 'batteryInnerSensor',
            dataType: 'status',
            data: {
                pmsCode : pmsCode,
                essCode : essCode,
                deviceCode : deviceCode,
                deviceName : deviceName,
                faultExistYn : faultExistYn,
                measures : measures
            }
        };

        console.log("---------------------------------------------");
        console.log("sendBatteryInnerSensorData : " + JSON.stringify(sendData));
        console.log("---------------------------------------------\n\n");

        ws.send(JSON.stringify(sendData));
    }

    function disconnect() {
        ws.close(200, "test");

    }
</script>
</html>
